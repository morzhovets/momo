<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

<Type Name="momo::Array&lt;*&gt;">
    <DisplayString>{{ Count={mData.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mData.mCount</Item>
        <Item Condition="(void*)mData.mItems != (void*)&amp;mData.mInternalItems" Name="[Capacity]">mData.mCapacity</Item>
        <Item Condition="(void*)mData.mItems == (void*)&amp;mData.mInternalItems" Name="[Capacity]">internalCapacity</Item>
        <ArrayItems>
            <Size>mData.mCount</Size>
            <ValuePointer>mData.mItems</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::SegmentedArray&lt;*&gt;">
    <DisplayString>{{ Count={mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mCount</Item>
        <Item Name="[Segments]">mSegments</Item>
    </Expand>
</Type>

<Type Name="momo::HashSetCore&lt;*&gt;">
    <DisplayString>{{ Count={mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mCount</Item>
        <Item Name="[Capacity]">mCapacity</Item>
        <Item Name="[Buckets]">mBuckets</Item>
    </Expand>
</Type>

<Type Name="momo::HashMapCore&lt;*&gt;">
    <DisplayString>{{ Count={mHashSet.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mHashSet.mCount</Item>
        <Item Name="[Capacity]">mHashSet.mCapacity</Item>
        <Item Name="[Buckets]">mHashSet.mBuckets</Item>
    </Expand>
</Type>

<Type Name="momo::HashMultiMapCore&lt;*&gt;">
    <DisplayString>{{ ValueCount={mValueCount} KeyCount={mHashMap.mHashSet.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[ValueCount]">mValueCount</Item>
        <Item Name="[KeyCount]">mHashMap.mHashSet.mCount</Item>
        <Item Name="[Buckets]">mHashMap.mHashSet.mBuckets</Item>
    </Expand>
</Type>

<Type Name="momo::TreeSet&lt;*&gt;">
    <DisplayString>{{ Count={mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mCount</Item>
        <Item Name="[RootNode]">mRootNode</Item>
    </Expand>
</Type>

<Type Name="momo::TreeMap&lt;*&gt;">
    <DisplayString>{{ Count={mTreeSet.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">mTreeSet.mCount</Item>
        <Item Name="[RootNode]">mTreeSet.mRootNode</Item>
    </Expand>
</Type>

<Type Name="momo::DataTable&lt;*&gt;">
    <DisplayString>{{ RowCount={mRaws.mData.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Columns]">mCrew.mData->columnList</Item>
        <Item Name="[Rows]">mRaws</Item>
    </Expand>
</Type>

<Type Name="momo::DataColumnList&lt;*&gt;">
    <DisplayString>{{ Count={mColumnRecords.mData.mCount} }}</DisplayString>
    <Expand>
        <ExpandedItem>mColumnRecords</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::vector&lt;*&gt;">
    <DisplayString>{{ {mArray} }}</DisplayString>
    <Expand>
        <ExpandedItem>mArray</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::unordered_set&lt;*&gt;">
    <AlternativeType Name="momo::stdish::unordered_set_open&lt;*&gt;"/>
    <DisplayString>{{ {mHashSet} }}</DisplayString>
    <Expand>
        <ExpandedItem>mHashSet</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::unordered_map&lt;*&gt;">
    <AlternativeType Name="momo::stdish::unordered_map_open&lt;*&gt;"/>
    <DisplayString>{{ {mHashMap} }}</DisplayString>
    <Expand>
        <ExpandedItem>mHashMap</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::unordered_multimap&lt;*&gt;">
    <AlternativeType Name="momo::stdish::unordered_multimap_open&lt;*&gt;"/>
    <DisplayString>{{ {mHashMultiMap} }}</DisplayString>
    <Expand>
        <ExpandedItem>mHashMultiMap</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::set&lt;*&gt;">
    <AlternativeType Name="momo::stdish::multiset&lt;*&gt;"/>
    <DisplayString>{{ {mTreeSet} }}</DisplayString>
    <Expand>
        <ExpandedItem>mTreeSet</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::stdish::map&lt;*&gt;">
    <AlternativeType Name="momo::stdish::multimap&lt;*&gt;"/>
    <DisplayString>{{ {mTreeMap} }}</DisplayString>
    <Expand>
        <ExpandedItem>mTreeMap</ExpandedItem>
    </Expand>
</Type>

<Type Name="momo::internal::ObjectBuffer&lt;*&gt;">
    <DisplayString>{{ {*(Object*)&amp;mBuffer} }}</DisplayString>
    <Expand>
        <ArrayItems>
            <Size>count</Size>
            <ValuePointer>(Object*)&amp;mBuffer</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::MapKeyValuePair&lt;*&gt;">
    <DisplayString>{{ Key={*(Key*)&amp;mKeyBuffer} Value={*(Value*)&amp;mValueBuffer} }}</DisplayString>
    <Expand>
        <Item Name="[Key]">*(Key*)&amp;mKeyBuffer</Item>
        <Item Name="[Value]">*(Value*)&amp;mValueBuffer</Item>
    </Expand>
</Type>

<Type Name="momo::internal::MapKeyValuePtrPair&lt;*&gt;">
    <DisplayString>{{ Key={*(Key*)&amp;mKeyBuffer} Value={*mValuePtr} }}</DisplayString>
    <Expand>
        <Item Name="[Key]">*(Key*)&amp;mKeyBuffer</Item>
        <Item Name="[Value]">*mValuePtr</Item>
    </Expand>
</Type>

<Type Name="momo::internal::HashSetBuckets&lt;*&gt;">
    <DisplayString>{{ BucketCount={(size_t)1 &lt;&lt; mLogCount} }}</DisplayString>
    <Expand>
        <Item Name="[BucketCount]">(size_t)1 &lt;&lt; mLogCount</Item>
        <Item Name="[NextBuckets]">mNextBuckets</Item>
        <ArrayItems>
            <Size>(size_t)1 &lt;&lt; mLogCount</Size>
            <ValuePointer>(Bucket*)(this + 1)</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::ArrayBucket&lt;*&gt;">
    <DisplayString Condition="mPtr == 0">{{ Count=0 }}</DisplayString>
    <DisplayString Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) != 0">{{ Count={(size_t)(*mPtr &amp; 15)} }}</DisplayString>
    <DisplayString Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) == 0">{{ Count={((Array*)(mPtr + arrayAlignment))->mData.mCount} }}</DisplayString>
    <Expand>
        <Item Condition="mPtr == 0" Name="[Count]">0</Item>
        <Item Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) != 0" Name="[Count]">(size_t)(*mPtr &amp; 15)</Item>
        <Item Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) == 0" Name="[Count]">((Array*)(mPtr + arrayAlignment))->mData.mCount</Item>
        <ArrayItems>
            <Size>mPtr == 0 ? 0 : (size_t)(*mPtr >> 4) != 0 ? (size_t)(*mPtr &amp; 15) : ((Array*)(mPtr + arrayAlignment))->mData.mCount</Size>
            <ValuePointer Condition="mPtr == 0">(Item*)0</ValuePointer>
            <ValuePointer Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) != 0">(Item*)(mPtr + ItemTraits::alignment)</ValuePointer>
            <ValuePointer Condition="mPtr != 0 &amp;&amp; (size_t)(*mPtr >> 4) == 0">((Array*)(mPtr + arrayAlignment))->mData.mItems</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::BucketLimP4&lt;*&gt;">
    <DisplayString Condition="*(uintptr_t*)&amp;mPtrState &lt; 4">{{ Count=0 }}</DisplayString>
    <DisplayString Condition="*(uintptr_t*)&amp;mPtrState >= 4 &amp;&amp; useHashCodePartGetter">{{ Count={(4 - (mShortCodes[0] >> 7) - (mShortCodes[1] >> 7) - (mShortCodes[2] >> 7) - (mShortCodes[3] >> 7))} FirstItem={*(Item*)(*(uintptr_t*)&amp;mPtrState / 4 * 4)} }}</DisplayString>
    <DisplayString Condition="*(uintptr_t*)&amp;mPtrState >= 4 &amp;&amp; !useHashCodePartGetter">{{ Count={(4 - (mShortCodes[0] >> 7) - (mShortCodes[1] >> 7) - (mShortCodes[2] >> 7) - (mShortCodes[3] >> 7))} FirstItem={**(Item**)&amp;mPtrState} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">4 - (mShortCodes[0] >> 7) - (mShortCodes[1] >> 7) - (mShortCodes[2] >> 7) - (mShortCodes[3] >> 7)</Item>
        <ArrayItems>
            <Size>4 - (mShortCodes[0] >> 7) - (mShortCodes[1] >> 7) - (mShortCodes[2] >> 7) - (mShortCodes[3] >> 7)</Size>
            <ValuePointer Condition="useHashCodePartGetter">(Item*)(*(uintptr_t*)&amp;mPtrState / 4 * 4)</ValuePointer>
            <ValuePointer Condition="!useHashCodePartGetter">*(Item**)&amp;mPtrState</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::BucketOpen2N2&lt;*&gt;">
    <DisplayString Condition="(mState[1] &amp; 3) == 0">{{ Count=0 }}</DisplayString>
    <DisplayString Condition="(mState[1] &amp; 3) != 0">{{ Count={(size_t)(mState[1] &amp; 3)} FirstItem={((Item*)&amp;mItems)[maxCount - 1]} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">(mState[1] &amp; 3)</Item>
        <ArrayItems>
            <Size>(mState[1] &amp; 3)</Size>
            <ValuePointer>((Item*)&amp;mItems) + maxCount - (mState[1] &amp; 3)</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::BucketOpen8&lt;*&gt;">
    <DisplayString Condition="mData[maxCount - 1] == emptyShortCode">{{ Count=0 }}</DisplayString>
    <DisplayString Condition="mData[maxCount - 1] != emptyShortCode">{{ Count={(mData[maxCount - 1] >= emptyShortCode) ? (size_t)(mData[maxCount - 1] - emptyShortCode) : maxCount} FirstItem={*(Item*)&amp;mItems} }}</DisplayString>
    <Expand>
        <Item Name="[Count]">(mData[maxCount - 1] >= emptyShortCode) ? (size_t)(mData[maxCount - 1] - emptyShortCode) : maxCount</Item>
        <ArrayItems>
            <Size>(mData[maxCount - 1] >= emptyShortCode) ? (size_t)(mData[maxCount - 1] - emptyShortCode) : maxCount</Size>
            <ValuePointer>(Item*)&amp;mItems</ValuePointer>
        </ArrayItems>
    </Expand>
</Type>

<Type Name="momo::internal::Node&lt;*&gt;">
    <DisplayString>{{ ItemCount={(size_t)mCounter.count} IsLeaf={(size_t)mMemPoolIndex &lt; leafMemPoolCount} }}</DisplayString>
    <Expand>
        <Item Name="[ItemCount]">(size_t)mCounter.count</Item>
        <Item Name="[IsLeaf]">(size_t)mMemPoolIndex &lt; leafMemPoolCount</Item>
        <Synthetic Name="[Children]" Condition="!((size_t)mMemPoolIndex &lt; leafMemPoolCount)">
            <DisplayString>{{ ChildrenCount={(size_t)mCounter.count + 1} }}</DisplayString>
            <Expand>
                <ArrayItems>
                    <Size>(size_t)mCounter.count + 1</Size>
                    <ValuePointer>&amp;mParent - internalOffset / sizeof(void*)</ValuePointer>
                </ArrayItems>
            </Expand>
        </Synthetic>
        <IndexListItems>
            <Size>(size_t)mCounter.count</Size>
            <ValueNode Condition="isContinuous">((Item*)((char*)this + ((char*)(this + 1) - (char*)this + ItemTraits::alignment - 1) / ItemTraits::alignment * ItemTraits::alignment))[$i]</ValueNode>
            <ValueNode Condition="!isContinuous">((Item*)((char*)this + ((char*)(this + 1) - (char*)this + ItemTraits::alignment - 1) / ItemTraits::alignment * ItemTraits::alignment))[((uint8_t*)&amp;mCounter.count)[$i + 1]]</ValueNode>
        </IndexListItems>
    </Expand>
</Type>

<Type Name="momo::internal::DataSelection&lt;*&gt;">
    <DisplayString>{{ RowCount={mRaws.mData.mCount} }}</DisplayString>
    <Expand>
        <Item Name="[Columns]">mColumnList</Item>
        <Item Name="[Rows]">mRaws</Item>
    </Expand>
</Type>

</AutoVisualizer>
