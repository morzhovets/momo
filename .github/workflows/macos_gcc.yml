name: macOS GCC

on: [push, pull_request]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:

        - gcc_ver: '14'
          build_type: 'Release'
          flags: '-std=c++23 -msse2 -DTEST_LIBCXX_NEW'
          path_prefix: '/usr/local'
          macos_ver: '13'

        # macOS-14-arm64
        - gcc_ver: '11'
          build_type: 'Release'
          flags: '-std=c++23 -DTEST_LIBCXX_NEW'
          path_prefix: '/opt/homebrew'
          macos_ver: '14'

        - gcc_ver: '12'
          build_type: 'Release'
          flags: '-std=c++23 -DTEST_LIBCXX_NEW'
          path_prefix: '/opt/homebrew'
          macos_ver: '14'

        - gcc_ver: '13'
          build_type: 'Release'
          flags: '-std=c++23 -DTEST_LIBCXX_NEW'
          path_prefix: '/opt/homebrew'
          macos_ver: '14'

        - gcc_ver: '14'
          build_type: 'Release'
          flags: '-std=c++23 -DTEST_LIBCXX_NEW'
          path_prefix: '/opt/homebrew'
          macos_ver: '14'

        - gcc_ver: '14'
          build_type: 'Release'
          flags: '-std=c++23 -DTEST_LIBCXX_NEW -fno-rtti -DMOMO_USE_SAFE_MAP_BRACKETS -DMOMO_USE_UNORDERED_HINT_ITERATORS -DMOMO_DISABLE_TYPE_INFO'
          path_prefix: '/opt/homebrew'
          macos_ver: '14'

    runs-on: macos-${{ matrix.macos_ver }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Ninja
      run: brew install ninja
    - name: Install GCC
      run: brew install gcc@${{ matrix.gcc_ver }}
    - name: Build
      env:
        CXX: ${{ matrix.path_prefix }}/opt/gcc@${{ matrix.gcc_ver }}/bin/g++-${{ matrix.gcc_ver }}
        CXXFLAGS: ${{ matrix.flags }}
      run: |
        cd test
        mkdir build
        cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        cmake --build . -v
    - name: Test
      run: test/build/momo_test
